<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>UAS</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <!-- Bootstrap Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css"
    />
    <link rel="stylesheet" href="/stylesheets/css/index.css" />
    <link rel="stylesheet" href="/stylesheets/css/font.css" />
    <link rel="stylesheet" href="/stylesheets/css/style.css" />
    <link rel="stylesheet" href="/stylesheets/css/components.css" />
    <link rel="stylesheet" href="/stylesheets/css/Landingpage.css" />
    <style>
      .modal {
        display: none;
        position: fixed;
        top: calc(0% + 180px);
        right: -100%;
        left: auto;
        transform: translateY(-50%);
        padding: 1em;
        width: 80%;
        max-width: 400px;
        border-radius: 0.5em 0 0 0.5em;
        transition: right 0.5s ease;
      }
      .modal.active {
        display: block;
        right: 0;
      }

      .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #dee2e6;
        padding-bottom: 0.5em;
      }
      .modal-header h5 {
        margin: 0;
      }
      .modal-body {
        margin-top: 1em;
      }
      .modal-body a {
        display: block;
        margin-bottom: 0.5em;
        color: #007bff;
        text-decoration: none;
      }
      .modal-body a:hover {
        text-decoration: underline;
      }
      .modal-close {
        cursor: pointer;
      }

      .modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0);
      }

      .modal-backdrop.active {
        display: block;
      }

      .hamburger-menu {
        display: none;
        cursor: pointer;
      }

      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1em;
      }

      .header__logo {
        max-height: 50px;
      }

      .hamburger-menu {
        display: none;
        cursor: pointer;
      }

      @media (max-width: 768px) {
        .hamburger-menu {
          display: block;
        }

        .header__menu {
          display: none;
          flex-direction: column;
          align-items: flex-start;
          background-color: #fff;
          padding: 1em;
          position: absolute;
          top: 100%;
          left: 0;
          width: 100%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          z-index: 9999;
        }

        .header__actions {
          display: none;
          flex-direction: column;
          align-items: flex-start;
          background-color: #fff;
          padding: 1em;
          position: absolute;
          top: 100%;
          right: 0;
          width: 100%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          z-index: 9999;
        }

        .header__upload {
          display: block;
          margin-top: 1em;
        }

        .header__user-menu {
          display: block;
          margin-top: 1em;
        }

        .header__menu.show,
        .header__actions.show {
          display: flex;
        }
      }
      * {
        margin: 0;
      }
      /* Tata letak utama */
      .upload-section {
        padding-left: 163px;
        padding-right: 156px;
      }

      /* Responsif untuk layar berukuran kecil */
      @media only screen and (max-width: 1050px) {
        .upload-section {
          padding-left: var(--space-5xl);
          padding-right: var(--space-5xl);
          padding: var(--space-5xl);
        }
      }

      /* Container untuk drop area */
      .upload-section__drag-drop-container {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
      }

      .upload-section__drag-drop-container.dragging {
        background-color: #f0f0f0;
      }

      /* Container untuk file previews */
      .file-previews-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 20px;
        width: 100%; /* Membuat lebar 100% */
      }

      /* Kartu untuk file preview */
      .file-preview {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 300px; /* Sesuaikan lebar card sesuai kebutuhan Anda */
        text-align: center;
        background-color: #f9f9f9;
      }

      /* Gambar dalam file preview */
      .file-preview img {
        max-width: 100%;
        height: auto;
        margin-bottom: 10px;
      }

      /* Input, select, dan textarea dalam file preview */
      .file-preview input,
      .file-preview select,
      .file-preview textarea {
        width: 100%;
        margin-bottom: 10px;
        padding: 5px;
      }

      /* Tombol unggah */
      #upload-button {
        display: none; /* Sembunyikan tombol unggah awal */
        margin: 20px 0;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }

      #upload-button:hover {
        background-color: #0056b3;
      }

      /* CSS tambahan untuk tampilan di atas upload section */
      .upload-preview-container {
        margin-bottom: 20px;
      }

      /* Kartu untuk upload preview */
      .upload-preview {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
      }

      /* Gambar dalam upload preview */
      .upload-preview img {
        max-width: 80px;
        height: auto;
        margin-right: 10px;
      }

      /* Informasi dalam upload preview */
      .upload-preview-info {
        flex: 1;
      }

      .upload-preview-info p {
        margin-bottom: 5px;
      }

      .upload-preview-info input,
      .upload-preview-info select,
      .upload-preview-info textarea {
        min-width: 500px;
        padding: 5px;
        margin-bottom: 5px;
      }

      .header {
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .header__menu-container {
        display: flex;
        align-items: center;
      }

      .header__menu {
        /* Gaya menu */
      }

      .header__actions {
        display: flex;
        align-items: center;
      }

      .centered-title {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 10vh; /* Adjust the height as needed */
      }
    </style>
  </head>
  <body>
    <div class="landing-page">
      <header class="header">
        <a href="/users">
          <img
            src="/images/img_header_logo.png"
            alt="headerlogo"
            class="header__logo"
        /></a>
        <div class="hamburger-menu">
          <i class="bi bi-list" id="menuToggle"></i>
        </div>
        <ul class="header__menu">
          <li>
            <a href="#"><p class="ui text size-s">Contact</p></a>
          </li>
          <li>
            <a href="#"><p class="ui text size-s">About Us</p></a>
          </li>
          <li class="group">
            <div class="header__submenu">
              <p class="ui text size-s">Kategori</p>
              <i class="bi bi-chevron-down header__submenu-icon"></i>
            </div>
            <div class="group-1">
              <div class="menu-container">
                <div class="menu-group">
                  <% kategori.forEach((item) => { %>
                  <div class="menu">
                    <p class="mega-menu__title ui text">
                      <%= item.nama_kategori %>
                    </p>
                    <div class="menu-column"></div>
                  </div>
                  <% }); %>
                </div>
              </div>
            </div>
          </li>
          <li>
            <a href="/files"><p class="ui text size-s">Semua Dokumen</p></a>
          </li>
        </ul>
        <div class="header__actions">
          <div class="header__upload">
            <a href="/files/create" class="header__upload-link">
              <i class="bi bi-upload header__upload-icon"></i>
              <p class="header__upload-text ui text size-s">Unggah</p>
            </a>
          </div>
          <ul class="header__user-menu">
            <li>
              <a href="#" id="emailLink"
                ><p class="header__user-menu-item ui text size-xs">
                  <%= email %>
                </p></a
              >
            </li>
          </ul>
        </div>
      </header>

      <div class="centered-title">
        <h1 class="mt-5 upload-section__title ui heading size-s">
          Upload File
        </h1>
      </div>

      <!-- file previews section -->
      <form
        id="upload-form"
        action="/files/store"
        method="POST"
        enctype="multipart/form-data"
      >
        <div class="upload-section">
          <div class="upload-section container-sm">
            <!-- File previews section -->
            <div class="col justify-content-center w-100">
              <div
                id="file-previews-container"
                class="file-previews-container container"
              ></div>
            </div>
            <div class="col justify-content-center text-center mt-3">
              <input
                type="submit"
                class="btn btn-primary mx-auto w-50"
                value="Upload Files"
                id="upload-button"
                style="display: none"
              />
            </div>
          </div>
        </div>
      </form>
      <!-- upload section -->
      <!-- Upload section -->
      <div class="upload-section">
        <div class="upload-section__column">
          <div class="flex-col-center-center upload-section__upload-file">
            <div
              class="upload-section__drag-drop-container"
              id="drop-container"
            >
              <img
                src="/images/img_upload_icon.svg"
                alt="uploadicon"
                class="upload-section__icon"
              />
              <input
                type="file"
                id="file-input"
                name="file_pdf"
                multiple
                style="display: none"
              />
              <div class="upload-section__drag-drop-instructions">
                <h2 class="upload-section__drag-drop-text ui heading">
                  <span class="upload-section__drag-drop-text-span"
                    >Drag & drop files or</span
                  >
                  <span class="upload-section__drag-drop-text-span-1"
                    >&nbsp;</span
                  >
                  <a
                    href="#"
                    class="upload-section__drag-drop-text-span-2"
                    id="browse-link"
                    >Browse</a
                  >
                </h2>
              </div>
              <div class="upload-section__supported-formats">
                <p class="upload-section__formats-list ui text size-xs">
                  Supported formats: JPEG, PNG, GIF, MP4, PDF, PSD, AI, Word,
                  PPT
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- footer section -->
      <div class="landing-page-footer">
        <div class="footer__column">
          <div class="footer__column--info">
            <img
              src="/images/img_footer_logo.png"
              alt="footerlogo"
              class="header__logo"
            />
          </div>
          <div class="footer__row">
            <div class="footer__row--rights">
              <div class="footer__column--navigation">
                <div class="footer__copyright-row">
                  <p class="footer__copyright-text mt-5">
                    © 2021 All Rights Reserved
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Modal -->
      <div
        id="emailModalBackdrop"
        class="modal-backdrop"
        onclick="closeModal()"
      ></div>
      <div id="emailModal" class="modal">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Hai <%= email %>!</h5>
              <button
                type="button"
                class="btn-close"
                aria-label="Close"
                onclick="toggleModal()"
              ></button>
            </div>
            <div class="modal-body">
              <a href="/profile"><i class="bi bi-person"></i> Profile</a>
              <a href="/save"><i class="bi bi-heart"></i> Disimpan</a>
              <a href="/file"
                ><i class="bi bi-file-earmark-text"></i> Unggahan Dokumen</a
              >
              <a href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      function toggleModal() {
        var modal = document.getElementById("emailModal");
        var backdrop = document.getElementById("emailModalBackdrop");
        modal.classList.toggle("active");
        backdrop.classList.toggle("active");
      }

      document
        .getElementById("emailLink")
        .addEventListener("click", function (event) {
          event.preventDefault();
          toggleModal();
        });

      function closeModal() {
        var modal = document.getElementById("emailModal");
        var backdrop = document.getElementById("emailModalBackdrop");
        modal.classList.remove("active");
        backdrop.classList.remove("active");
      }

      document
        .getElementById("emailModalBackdrop")
        .addEventListener("click", function () {
          closeModal();
        });

      window.addEventListener("scroll", function () {
        closeModal();
      });

      document
        .getElementById("menuToggle")
        .addEventListener("click", function () {
          document.querySelector(".header__menu").classList.toggle("show");
          document.querySelector(".header__actions").classList.toggle("show");
        });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const dropContainer = document.getElementById("drop-container");
        const fileInput = document.getElementById("file-input");
        const browseLink = document.getElementById("browse-link");
        const filePreviewsContainer = document.getElementById(
          "file-previews-container"
        );
        const uploadForm = document.getElementById("upload-form");
        const uploadButton = document.getElementById("upload-button");

        let filePDF; // Definisikan filePDF di luar fungsi handlePDFUpload

        browseLink.addEventListener("click", function (event) {
          event.preventDefault();
          fileInput.click();
        });

        dropContainer.addEventListener("dragover", function (event) {
          event.preventDefault();
          dropContainer.classList.add("dragging");
        });

        dropContainer.addEventListener("dragleave", function () {
          dropContainer.classList.remove("dragging");
        });

        dropContainer.addEventListener("drop", function (event) {
          event.preventDefault();
          dropContainer.classList.remove("dragging");
          const files = event.dataTransfer.files;
          handleFiles(files);
        });

        fileInput.addEventListener("change", function (event) {
          const files = event.target.files;
          handleFiles(files);
        });

        // Function to handle files
        function handleFiles(files) {
          filePreviewsContainer.innerHTML = ""; // Clear previous file previews
          for (let i = 0; i < files.length; i++) {
            const file = files[i];
            const filePreview = document.createElement("div");
            filePreview.classList.add("file-preview");

            const fileName = document.createElement("p");
            fileName.textContent = file.name;
            filePreview.appendChild(fileName);

            // Add unique data attribute for each file preview
            filePreview.dataset.index = i;

            // Add delete button
            const deleteButton = document.createElement("button");
            deleteButton.textContent = "Hapus";
            deleteButton.classList.add("delete-button");
            deleteButton.addEventListener("click", function () {
              const index = filePreview.dataset.index; // Get the index from data attribute
              deleteFile(index);
              checkRemainingFiles(); // Check remaining files after deletion
            });

            // Add input elements for additional information
            const additionalInputs = `
    <label for="nama_file_${i}" class="form-label">Nama File</label>
    <input id="nama_file_${i}" class="form-control" type="text" name="nama_file" placeholder="Nama File">

    <label for="id_kategori_${i}" class="form-label">Kategori</label>
    <select id="id_kategori_${i}" class="form-select" name="id_kategori" required>
        <% for(var i = 0; i < kategori.length; i++){ %>
            <option value="<%= kategori[i].id_kategori %>">
                <%= kategori[i].nama_kategori %>
            </option>
        <% } %>
    </select>

    <label for="deskripsi_${i}" class="form-label">Deskripsi</label>
    <input id="deskripsi_${i}" class="form-control" type="text" name="deskripsi" placeholder="Deskripsi">

    <label for="privasi_${i}" class="form-label">Privasi</label>
    <select id="privasi_${i}" class="form-select" name="privasi" required>
        <option value="public">Public</option>
        <option value="private">Private</option>
    </select>

    <label for="izin_${i}" class="form-label">Izin</label>
    <select id="izin_${i}" class="form-select" name="izin" required>
        <option value="Salin dan rekatkan teks">Salin dan rekatkan teks</option>
        <option value="Unduh dokumen">Unduh dokumen</option>
    </select>

    <label for="hak_cipta_${i}" class="form-label">Hak Cipta</label>
    <select id="hak_cipta_${i}" class="form-select" name="hak_cipta" required>
        <option value="All Rights Reserved">All Rights Reserved</option>
        <option value="Public Domain">Public Domain</option>
    </select>
`;
            filePreview.insertAdjacentHTML("beforeend", additionalInputs);

            filePreview.appendChild(deleteButton);

            // Append file preview to the container
            filePreviewsContainer.appendChild(filePreview);
          }

          // Show upload button after files are added
          uploadButton.style.display = "block";
        }

        // Function to delete file preview
        function deleteFile(index) {
          const previewElement = document.querySelector(
            `[data-index="${index}"]`
          );
          previewElement.remove();
        }

        // Function to check remaining files after deletion
        function checkRemainingFiles() {
          const remainingFiles = document.querySelectorAll(".file-preview");
          if (remainingFiles.length === 0) {
            // Hide upload button if no remaining files
            uploadButton.style.display = "none";
          }
        }
        // Function to get user ID from session
        function getUserIdFromSession() {
          // Implement logic to get user ID from session
          // For example:
          const userId = sessionStorage.getItem("userId");
          return userId;
        }

        // Function to handle PDF upload
        function handlePDFUpload(files) {
          // Hanya mengambil file PDF pertama jika ada lebih dari satu file
          filePDF = files[0];

          // Membuat objek FileReader
          const reader = new FileReader();

          // Menangani saat file selesai dibaca
          reader.onload = function (event) {
            // Buat elemen baru untuk menampilkan PDF
            const pdfElement = document.createElement("embed");
            pdfElement.setAttribute("src", event.target.result);
            pdfElement.setAttribute("type", "application/pdf");
            pdfElement.setAttribute("style", "width: 200px; height: 250px;");

            // Dapatkan file preview pertama
            const filePreview = document.querySelector(
              '.file-preview[data-index="0"]'
            );

            // Sisipkan elemen PDF di atas elemen nama file
            const fileNameElement = filePreview.querySelector("p");
            filePreview.insertBefore(pdfElement, fileNameElement);
          };

          // Membaca file sebagai URL data
          reader.readAsDataURL(filePDF);
        }

        // Function to handle form submission
        function handleSubmit(event) {
          event.preventDefault();
          const formData = new FormData();

          if (filePDF) {
            formData.append("file_pdf", filePDF);
          }

          const additionalInputs = document.querySelectorAll(".file-preview");
          additionalInputs.forEach((filePreview, index) => {
            const namaFile = filePreview.querySelector(
              'input[name="nama_file"]'
            ).value;
            const idKategori = filePreview.querySelector(
              'select[name="id_kategori"]'
            ).value;
            const deskripsi = filePreview.querySelector(
              'input[name="deskripsi"]'
            ).value;
            const privasi = filePreview.querySelector(
              'select[name="privasi"]'
            ).value;
            const izin = filePreview.querySelector('select[name="izin"]').value;
            const hakCipta = filePreview.querySelector(
              'select[name="hak_cipta"]'
            ).value;
            const idUser = getUserIdFromSession();

            formData.append("nama_file[]", namaFile);
            formData.append("id_kategori[]", idKategori);
            formData.append("deskripsi[]", deskripsi);
            formData.append("privasi[]", privasi);
            formData.append("izin[]", izin);
            formData.append("hak_cipta[]", hakCipta);
            formData.append("id_user[]", idUser);
          });

          // Kirim data ke server
          fetch("/files/store", {
            method: "POST",
            body: formData,
          })
            .then((response) => {
              if (response.ok) {
                // Berhasil mengunggah file
                console.log("Files uploaded successfully");
                alert("File berhasil diunggah!");
                // Redirect atau perbarui halaman setelah unggahan berhasil
                window.location.href = "/files/create";
              } else {
                // Gagal mengunggah file
                console.error("Failed to upload files");
              }
            })
            .catch((error) => {
              console.error("Error uploading files:", error);
            });
        }

        uploadForm.addEventListener("submit", handleSubmit);

        // Event listener untuk memanggil handlePDFUpload saat file diunggah
        fileInput.addEventListener("change", function (event) {
          const files = event.target.files;
          handlePDFUpload(files);
        });

        dropContainer.addEventListener("drop", function (event) {
          event.preventDefault();
          dropContainer.classList.remove("dragging");
          const files = event.dataTransfer.files;
          handlePDFUpload(files);
        });
      });
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
