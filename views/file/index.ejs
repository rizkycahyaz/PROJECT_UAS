<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>UAS</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css"
    />
    <link rel="stylesheet" href="/stylesheets/css/index.css" />
    <link rel="stylesheet" href="/stylesheets/css/font.css" />
    <link rel="stylesheet" href="/stylesheets/css/style.css" />
    <link rel="stylesheet" href="/stylesheets/css/components.css" />
    <link rel="stylesheet" href="/stylesheets/css/Landingpage.css" />
    <style>
      .modal {
        display: none;
        position: fixed;
        top: calc(0% + 180px);
        right: -100%;
        left: auto;
        transform: translateY(-50%);
        padding: 1em;
        width: 80%;
        max-width: 400px;
        border-radius: 0.5em 0 0 0.5em;
        transition: right 0.5s ease;
      }
      .modal.active {
        display: block;
        right: 0;
      }
      .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #dee2e6;
        padding-bottom: 0.5em;
      }
      .modal-header h5 {
        margin: 0;
      }
      .modal-body {
        margin-top: 1em;
      }
      .modal-body a {
        display: block;
        margin-bottom: 0.5em;
        color: #007bff;
        text-decoration: none;
      }
      .modal-body a:hover {
        text-decoration: underline;
      }
      .modal-close {
        cursor: pointer;
      }
      .modal-backdrop {
        display: none;
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0);
      }
      .modal-backdrop.active {
        display: block;
      }
      .hamburger-menu {
        display: none;
        cursor: pointer;
      }
      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1em;
      }
      .header__logo {
        max-height: 50px;
      }
      .hamburger-menu {
        display: none;
        cursor: pointer;
      }
      @media (max-width: 768px) {
        .hamburger-menu {
          display: block;
        }
        .header__menu {
          display: none;
          flex-direction: column;
          align-items: flex-start;
          background-color: #fff;
          padding: 1em;
          position: absolute;
          top: 100%;
          left: 0;
          width: 100%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          z-index: 9999;
        }
        .header__actions {
          display: none;
          flex-direction: column;
          align-items: flex-start;
          background-color: #fff;
          padding: 1em;
          position: absolute;
          top: 100%;
          right: 0;
          width: 100%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          z-index: 9999;
        }
        .header__upload {
          display: block;
          margin-top: 1em;
        }
        .header__user-menu {
          display: block;
          margin-top: 1em;
        }
        .header__menu.show,
        .header__actions.show {
          display: flex;
        }
      }
    </style>
  </head>
  <body>
    <div class="landing-page">
      <header class="header">
        <a href="/users"
          ><img
            src="/images/img_header_logo.png"
            alt="headerlogo"
            class="header__logo"
        /></a>
        <div class="hamburger-menu">
          <i class="bi bi-list" id="menuToggle"></i>
        </div>
        <ul class="header__menu">
          <li>
            <a href="/users"><p class="ui text size-s">Beranda</p></a>
          </li>
          <li class="group">
            <div class="header__submenu">
              <p class="ui text size-s">Kategori</p>
              <i class="bi bi-chevron-down header__submenu-icon"></i>
            </div>
            <div class="group-1">
              <div class="menu-container">
                <div class="menu-group">
                  <% kategori.forEach((item) => { %>
                  <div class="menu">
                    <p class="mega-menu__title ui text">
                      <%= item.nama_kategori %>
                    </p>
                    <div class="menu-column"></div>
                  </div>
                  <% }); %>
                </div>
              </div>
            </div>
          </li>
          <li>
            <a href="/files"><p class="ui text size-s">Semua Dokumen</p></a>
          </li>
        </ul>
        <div class="header__actions">
          <div class="header__upload">
            <a href="/file/create" class="header__upload-link">
              <i class="bi bi-upload header__upload-icon"></i>
              <p class="header__upload-text ui text size-s">Unggah</p>
            </a>
          </div>
          <ul class="header__user-menu">
            <li>
              <a href="#" id="emailLink"
                ><p class="header__user-menu-item ui text size-xs">
                  <%= email %>
                </p></a
              >
            </li>
          </ul>
        </div>
      </header>

      <div class="container">
        <h1 class="text-center mt-4 mb-4">Riwayat Unggahan</h1>
        <div
          class="container d-flex justify-content-center"
          style="width: 100%; display: flex; justify-content: center"
        >
          <div class="row d-flex" style="width: 50%">
            <div class="col-12" id="setujuRow">
              <h2>Setuju</h2>
              <div
                class="row"
                id="setujuColumn"
                style="
                  width: 100%;
                  display: grid;
                  grid-template-columns: repeat(3, 1fr);
                "
              >
                <!-- Data dari JavaScript akan dimasukkan di sini -->
              </div>
            </div>

            <div class="col-12" id="tidakSetujuRow">
              <h2>Tidak Setuju</h2>
              <div
                class="row"
                id="tidakSetujuColumn"
                style="
                  width: 100%;
                  display: grid;
                  grid-template-columns: repeat(3, 1fr);
                "
              >
                <!-- Data dari JavaScript akan dimasukkan di sini -->
              </div>
            </div>

            <div class="col-12" id="pendingRow">
              <h2>Pending</h2>
              <div
                class="row"
                style="
                  width: 100%;
                  display: grid;
                  grid-template-columns: repeat(3, 1fr);
                "
                id="pendingColumn"
              >
                <!-- Data dari JavaScript akan dimasukkan di sini -->
              </div>
            </div>
          </div>

          <!-- <div
            class="row"
            style="
              display: grid;
              grid-template-columns: repeat(3, minmax(0, 1fr));
              gap: 10px;
              width: 80%;
            "
          >
            <% data.forEach((item, index) => { %>
        <div class="content container-sm">
          <div class="content__welcome">
            <p class="content__title ui text size-xl">Selamat Datang</p>
            <p class="content__subtitle ui text size-lg">
              Jelajahi lebih dari 170 juta dokumen dari komunitas global,
              bagikan informasi, dan temukan inspirasi
            </p>
          </div>
          <label class="content__search">
            <img src="/images/img_rewind.svg" alt="rewind" class="rewind" />
            <input name="search" placeholder="Search..." type="text" />
          </label>

          <div class="row">
            <% if (popularFiles && popularFiles.length > 0) { %> <%
            popularFiles.forEach((item, index) => { %>
            <div class="col" style="width: 100%">
              <div
                class="card file-card"
                style="width: 90%"
                data-url="<%= item.file_url %>"
              >
               
                <% if (item.file_pdf) { %>
                <span class="badge bg-danger position-absolute top-0 start-0"
                  >PDF</span
                >
                <% } %>
                <canvas
                  id="pdf-canvas-<%= item.id_file %>"
                  data-file-url="<%= item.file_url %>"
                  onclick="viewPDF('<%= item.id_file %>')"
                  style="cursor: pointer"
                ></canvas>
                <div class="card-body">
                  <h5 class="card-title text-center"><%= item.nama_file %></h5>
                  <p class="card-text text-center">
                    Total Download: <%= item.total_download %>
                  </p>
                  <div class="d-flex justify-content-center mt-5">
                    <a href="/file/download/<%= item.id_file %>"
                      ><i class="bi bi-download text-dark fs-6"></i
                    ></a>
                    <a href="/file/edit/<%= item.id_file %>" class="ms-2"
                      ><i class="bi bi-pencil text-dark fs-6"></i
                    ></a>
                    <a href="/file/delete/<%= item.id_file %>" class="ms-2"
                      ><i class="bi bi-trash text-dark fs-6"></i
                    ></a>
                  </div>
                </div>
              </div>
            </div>

            <% }); %>
          </div> -->
            <% }) %> <% } else { %>
            <p class="text-center">
              Tidak ada data file yang populer untuk ditampilkan.
            </p>
            <% } %>
          </div>
        </div>
      </div>

      <div class="landing-page-footer">
        <div class="footer__column">
          <div class="footer__column--info">
            <img
              src="/images/img_footer_logo.png"
              alt="footerlogo"
              class="header__logo"
            />
          </div>
          <div class="footer__row">
            <div class="footer__row--rights">
              <div class="footer__column--navigation">
                <div class="footer__copyright-row">
                  <p class="footer__copyright-text mt-5">
                    © 2021 All Rights Reserved
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal -->
      <div
        id="emailModalBackdrop"
        class="modal-backdrop"
        onclick="closeModal()"
      ></div>
      <div id="emailModal" class="modal">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Hai <%= email %>!</h5>
              <button
                type="button"
                class="btn-close"
                aria-label="Close"
                onclick="toggleModal()"
              ></button>
            </div>
            <div class="modal-body">
              <a href="/save"><i class="bi bi-heart"></i> Disimpan</a>
              <a href="/file"
                ><i class="bi bi-file-earmark-text"></i> Unggahan Dokumen</a
              >
              <a href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal untuk menampilkan PDF -->
      <div
        class="modal fade"
        id="fileModal"
        tabindex="-1"
        aria-labelledby="fileModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-dialog-centered modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="fileModalLabel">Tampilan PDF</h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <canvas id="pdfModalCanvas" style="width: 100%"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Include PDF.js library -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.8.335/pdf.min.js"
      integrity="sha384-C3xgnfKjq96mR5lFxW5IRtx/eFeEDtbEADgOkZhmyTp+JQs3IIS+HvWPTMmpJOnP"
      crossorigin="anonymous"
    ></script>

    <script>
      function viewPDF(id) {
        const canvas = document.getElementById(`pdf-canvas-${id}`);
        const fileUrl = canvas ? canvas.getAttribute("data-file-url") : null;

        if (fileUrl) {
          openModalWithFile(fileUrl);
        } else {
          console.error("URL file tidak valid untuk id file:", id);
        }
      }

      document.addEventListener("DOMContentLoaded", async function () {
        const pdfjsLib = window["pdfjs-dist/build/pdf"];
        pdfjsLib.GlobalWorkerOptions.workerSrc =
          "https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js";

        const files = JSON.parse(
          `<%- JSON.stringify(data).replace(/</g, '\\u003c') %>`
        );

        for (const file of files) {
          const url = file.file_url;

          if (!url || typeof url !== "string" || url.trim() === "") {
            console.error(
              `URL tidak valid untuk id file ${file.id_file}:`,
              url
            );
            continue;
          }

          const canvas = document.getElementById(`pdf-canvas-${file.id_file}`);
          if (!canvas) {
            console.error(
              `Canvas tidak ditemukan untuk id file ${file.id_file}`
            );
            continue;
          }
          const context = canvas.getContext("2d");

          try {
            const pdf = await pdfjsLib.getDocument(url).promise;
            const page = await pdf.getPage(1);
            const viewport = page.getViewport({ scale: 1 });

            const scale = canvas.width / viewport.width;
            const scaledViewport = page.getViewport({ scale });
            canvas.height = scaledViewport.height;

            const renderContext = {
              canvasContext: context,
              viewport: scaledViewport,
            };

            await page.render(renderContext).promise;
          } catch (error) {
            console.error(`Error memuat/render PDF ${file.id_file}:`, error);
          }
        }
      });

      function openModalWithFile(url) {
        const modalCanvas = document.getElementById("pdfModalCanvas");
        const context = modalCanvas.getContext("2d");

        const pdfjsLib = window["pdfjs-dist/build/pdf"];

        pdfjsLib
          .getDocument(url)
          .promise.then((pdf) => {
            pdf.getPage(1).then((page) => {
              const viewport = page.getViewport({ scale: 1 });
              modalCanvas.width = viewport.width;
              modalCanvas.height = viewport.height;

              const renderContext = {
                canvasContext: context,
                viewport: viewport,
              };

              page.render(renderContext).promise.then(() => {
                const modal = new bootstrap.Modal(
                  document.getElementById("fileModal")
                );
                modal.show();
              });
            });
          })
          .catch((error) => {
            console.error("Error membuka PDF di modal:", error);
          });
      }

      function toggleModal() {
        var modal = document.getElementById("emailModal");
        var backdrop = document.getElementById("emailModalBackdrop");
        modal.classList.toggle("active");
        backdrop.classList.toggle("active");
      }

      document
        .getElementById("emailLink")
        .addEventListener("click", function (event) {
          event.preventDefault();
          toggleModal();
        });

      function closeModal() {
        var modal = document.getElementById("emailModal");
        var backdrop = document.getElementById("emailModalBackdrop");
        modal.classList.remove("active");
        backdrop.classList.remove("active");
      }

      document
        .getElementById("emailModalBackdrop")
        .addEventListener("click", function () {
          closeModal();
        });

      window.addEventListener("scroll", function () {
        closeModal();
      });

      document
        .getElementById("menuToggle")
        .addEventListener("click", function () {
          document.querySelector(".header__menu").classList.toggle("show");
          document.querySelector(".header__actions").classList.toggle("show");
        });
    </script>
    <script>
      //klik pdf
      function viewPDF(id) {
        window.location.href = `/files/detail/${id}`;
      }

      const files = JSON.parse(
        `<%- JSON.stringify(data).replace(/</g, '\\u003c') %>`
      );

      // Tambahkan properti file_url ke setiap objek data
      files.forEach((file) => {
        file.file_url = file.file_pdf
          ? `/images/upload/${file.file_pdf}`
          : undefined;
      });
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", async function () {
        const pdfjsLib = window["pdfjs-dist/build/pdf"];
        pdfjsLib.GlobalWorkerOptions.workerSrc =
          "https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js";

        const files = JSON.parse(
          `<%- JSON.stringify(data).replace(/</g, '\\u003c') %>`
        );

        // Add file_url to each file object
        files.forEach((file) => {
          file.file_url = file.file_pdf
            ? `/images/upload/${file.file_pdf}`
            : undefined;
        });

        // Render PDFs on canvas
        for (const file of files) {
          const url = file.file_url;
          if (!url || typeof url !== "string" || url.trim() === "") {
            console.error(`Invalid URL for file id ${file.id_file}:`, url);
            continue;
          }

          const canvas = document.getElementById(`pdf-canvas-${file.id_file}`);
          const context = canvas.getContext("2d");

          try {
            const pdf = await pdfjsLib.getDocument(url).promise;
            const page = await pdf.getPage(1);
            const viewport = page.getViewport({ scale: 1 });

            const scale = canvas.width / viewport.width;
            const scaledViewport = page.getViewport({ scale });
            canvas.height = scaledViewport.height;

            const renderContext = {
              canvasContext: context,
              viewport: scaledViewport,
            };

            await page.render(renderContext).promise;
          } catch (error) {
            console.error(
              `Error loading/rendering PDF ${file.id_file}:`,
              error
            );
          }
        }

        ddocument.querySelectorAll(".file-card").forEach((card) => {
          card.addEventListener("click", function () {
            const url = this.getAttribute("data-url");
            if (url) {
              openModalWithFile(url);
            }
          });
        });
      });
    </script>
    <script>
      function viewPDF(id) {
        window.location.href = `/files/detail/${id}`;
      }
      document.addEventListener("DOMContentLoaded", async function () {
        const pdfjsLib = window["pdfjs-dist/build/pdf"];
        pdfjsLib.GlobalWorkerOptions.workerSrc =
          "https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js";

        const files = JSON.parse(
          `<%- JSON.stringify(data).replace(/</g, '\\u003c') %>`
        );

        files.forEach(async (file) => {
          file.file_url = file.file_pdf
            ? `/images/upload/${file.file_pdf}`
            : undefined;

          const url = file.file_url;
          if (!url || typeof url !== "string" || url.trim() === "") {
            console.error(`Invalid URL for file id ${file.id_file}:`, url);
            return;
          }

          try {
            const pdf = await pdfjsLib.getDocument(url).promise;
            const page = await pdf.getPage(1);
            const viewport = page.getViewport({ scale: 1 });

            const scale = 0.5;
            const scaledViewport = page.getViewport({ scale });
            const canvas = document.createElement("canvas");
            canvas.width = scaledViewport.width;
            canvas.height = scaledViewport.height;

            const context = canvas.getContext("2d");
            const renderContext = {
              canvasContext: context,
              viewport: scaledViewport,
            };

            await page.render(renderContext).promise;

            // Buat elemen card
            const card = document.createElement("div");
            card.classList.add("card", "file-card");
            card.style.width = "90%";
            card.dataset.url = url;

            // Tambahkan badge PDF jika ada
            if (file.file_pdf) {
              const pdfBadge = document.createElement("span");
              pdfBadge.classList.add(
                "badge",
                "bg-danger",
                "position-absolute",
                "top-0",
                "start-0"
              );
              pdfBadge.textContent = "PDF";
              card.appendChild(pdfBadge);
            }

            // Tambahkan canvas ke dalam card-body
            const cardBody = document.createElement("div");
            cardBody.classList.add("card-body");
            const cardTitle = document.createElement("h5");
            cardTitle.classList.add("card-title", "text-center");
            cardTitle.textContent = file.nama_file;
            const cardText = document.createElement("p");
            cardText.classList.add("card-text", "text-center");
            cardText.textContent = file.deskripsi;
            const actionLinks = document.createElement("div");
            actionLinks.classList.add(
              "d-flex",
              "justify-content-center",
              "mt-5"
            );
            const downloadLink = document.createElement("a");
            downloadLink.href = `/file/download/${file.id_file}`;
            const downloadIcon = document.createElement("i");
            downloadIcon.classList.add(
              "bi",
              "bi-download",
              "text-dark",
              "fs-6"
            );
            downloadLink.appendChild(downloadIcon);
            actionLinks.appendChild(downloadLink);
            const editLink = document.createElement("a");
            editLink.href = `/file/edit/${file.id_file}`;
            editLink.classList.add("ms-2");
            const editIcon = document.createElement("i");
            editIcon.classList.add("bi", "bi-pencil", "text-dark", "fs-6");
            editLink.appendChild(editIcon);
            actionLinks.appendChild(editLink);
            const deleteLink = document.createElement("a");
            deleteLink.href = `/file/delete/${file.id_file}`;
            deleteLink.classList.add("ms-2");
            const deleteIcon = document.createElement("i");
            deleteIcon.classList.add("bi", "bi-trash", "text-dark", "fs-6");
            deleteLink.appendChild(deleteIcon);
            actionLinks.appendChild(deleteLink);
            cardBody.appendChild(cardTitle);
            cardBody.appendChild(cardText);
            cardBody.appendChild(actionLinks);
            card.appendChild(canvas);
            card.appendChild(cardBody);

            // Tentukan kolom untuk card berdasarkan nilai pengajuan
            const columnId = determineColumn(file.pengajuan);

            // Masukkan card ke dalam kolom yang sesuai
            const columnElement = document.getElementById(columnId);
            if (columnElement) {
              columnElement.appendChild(card);
            } else {
              console.error(
                `Invalid column id ${columnId} for file id ${file.id_file}`
              );
            }
          } catch (error) {
            console.error(
              `Error loading/rendering PDF ${file.id_file}:`,
              error
            );
          }
        });
      });

      function determineColumn(pengajuan) {
        switch (pengajuan) {
          case "setuju":
            return "setujuColumn";
          case "tidak setuju":
            return "tidakSetujuColumn";
          case "pending":
            return "pendingColumn";
          default:
            return "pendingColumn"; // Default to "pending" if pengajuan is not recognized
        }
      }
    </script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
